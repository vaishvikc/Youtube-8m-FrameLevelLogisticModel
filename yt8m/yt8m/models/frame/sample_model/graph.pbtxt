node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "global_step/read"
  input: "mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "mul"
  input: "mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/initial_learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4000000.0
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079071
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast_2"
  op: "Cast"
  input: "mul_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/truediv"
  op: "RealDiv"
  input: "ExponentialDecay/Cast_2"
  input: "ExponentialDecay/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/Floor"
  op: "Floor"
  input: "ExponentialDecay/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/Pow"
  op: "Pow"
  input: "ExponentialDecay/Cast_1/x"
  input: "ExponentialDecay/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay"
  op: "Mul"
  input: "ExponentialDecay/initial_learning_rate"
  input: "ExponentialDecay/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "learning_rate/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "ScalarSummary"
  input: "learning_rate/tags"
  input: "ExponentialDecay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3844
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 3844
          }
        }
        string_val: "gs://youtube8m-ml/2/frame/train/train00.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train01.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train02.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train03.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train04.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train05.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train06.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train07.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train08.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train09.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0A.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0B.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0C.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0D.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0E.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0F.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0G.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0H.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0I.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0J.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0K.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0L.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0M.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0N.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0O.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0P.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0Q.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0R.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0S.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0T.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0U.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0V.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0W.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0X.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0Y.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0Z.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0a.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0b.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0c.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0d.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0e.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0f.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0g.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0h.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0i.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0j.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0k.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0l.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0m.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0n.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0o.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0p.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0q.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0r.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0s.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0t.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0u.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0v.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0w.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0x.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0y.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train0z.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train10.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train11.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train12.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train13.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train14.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train15.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train16.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train17.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train18.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train19.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1A.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1B.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1C.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1D.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1E.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1F.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1G.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1H.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1I.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1J.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1K.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1L.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1M.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1N.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1O.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1P.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1Q.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1R.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1S.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1T.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1U.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1V.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1W.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1X.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1Y.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1Z.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1a.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1b.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1c.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1d.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1e.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1f.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1g.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1h.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1i.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1j.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1k.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1l.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1m.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1n.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1o.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1p.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1q.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1r.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1s.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1t.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1u.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1v.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1w.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1x.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1y.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train1z.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train20.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train21.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train22.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train23.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train24.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train25.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train26.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train27.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train28.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train29.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2A.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2B.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2C.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2D.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2E.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2F.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2G.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2H.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2I.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2J.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2K.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2L.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2M.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2N.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2O.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2P.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2Q.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2R.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2S.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2T.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2U.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2V.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2W.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2X.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2Y.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2Z.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2a.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2b.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2c.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2d.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2e.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2f.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2g.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2h.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2i.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2j.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2k.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2l.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2m.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2n.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2o.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2p.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2q.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2r.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2s.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2t.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2u.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2v.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2w.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2x.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2y.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train2z.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train30.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train31.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train32.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train33.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train34.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train35.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train36.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train37.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train38.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train39.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3A.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3B.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3C.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3D.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3E.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3F.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3G.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3H.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3I.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3J.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3K.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3L.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3M.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3N.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3O.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3P.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3Q.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3R.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3S.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3T.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3U.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3V.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3W.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3X.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3Y.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3Z.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3a.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3b.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3c.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3d.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3e.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3f.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3g.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3h.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3i.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3j.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3k.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3l.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3m.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3n.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3o.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3p.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3q.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3r.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3s.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3t.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3u.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3v.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3w.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3x.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3y.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train3z.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train40.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train41.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train42.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train43.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train44.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train45.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train46.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train47.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train48.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train49.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4A.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4B.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4C.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4D.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4E.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4F.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4G.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4H.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4I.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4J.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4K.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4L.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4M.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4N.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4O.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4P.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4Q.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4R.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4S.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4T.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4U.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4V.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4W.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4X.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4Y.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4Z.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4a.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4b.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4c.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4d.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4e.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4f.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4g.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4h.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4i.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4j.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4k.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4l.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4m.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4n.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4o.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4p.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4q.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4r.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4s.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4t.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4u.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4v.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4w.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4x.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4y.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train4z.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train50.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train51.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train52.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train53.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train54.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train55.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train56.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train57.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train58.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train59.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5A.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5B.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5C.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5D.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5E.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5F.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5G.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5H.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5I.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5J.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5K.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5L.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5M.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5N.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5O.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5P.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5Q.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5R.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5S.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5T.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5U.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5V.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5W.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5X.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5Y.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5Z.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5a.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5b.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5c.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5d.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5e.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5f.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5g.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5h.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5i.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5j.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5k.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5l.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5m.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5n.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5o.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5p.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5q.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5r.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5s.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5t.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5u.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5v.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5w.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5x.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5y.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train5z.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train60.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train61.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train62.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train63.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train64.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train65.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train66.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train67.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train68.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train69.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6A.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6B.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6C.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6D.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6E.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6F.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6G.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6H.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6I.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6J.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6K.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6L.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6M.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6N.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6O.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6P.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6Q.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6R.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6S.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6T.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6U.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6V.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6W.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6X.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6Y.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6Z.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6a.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6b.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6c.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6d.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6e.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6f.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6g.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6h.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6i.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6j.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6k.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6l.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6m.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6n.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6o.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6p.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6q.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6r.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6s.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6t.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6u.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6v.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6w.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6x.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6y.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train6z.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train70.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train71.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train72.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train73.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train74.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train75.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train76.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train77.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train78.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train79.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7A.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7B.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7C.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7D.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7E.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7F.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7G.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7H.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7I.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7J.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7K.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7L.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7M.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7N.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7O.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7P.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7Q.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7R.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7S.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7T.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7U.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7V.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7W.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7X.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7Y.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7Z.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7a.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7b.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7c.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7d.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7e.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7f.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7g.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7h.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7i.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7j.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7k.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7l.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7m.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7n.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7o.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7p.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7q.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7r.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7s.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7t.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7u.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7v.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7w.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7x.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7y.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train7z.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train80.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train81.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train82.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train83.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train84.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train85.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train86.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train87.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train88.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train89.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8A.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8B.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8C.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8D.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8E.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8F.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8G.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8H.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8I.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8J.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8K.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8L.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8M.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8N.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8O.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8P.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8Q.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8R.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8S.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8T.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8U.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8V.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8W.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8X.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8Y.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8Z.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8a.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8b.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8c.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8d.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8e.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8f.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8g.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8h.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8i.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8j.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8k.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8l.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8m.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8n.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8o.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8p.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8q.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8r.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8s.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8t.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8u.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8v.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8w.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8x.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8y.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train8z.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train90.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train91.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train92.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train93.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train94.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train95.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train96.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train97.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train98.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train99.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9A.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9B.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9C.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9D.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9E.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9F.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9G.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9H.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9I.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9J.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9K.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9L.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9M.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9N.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9O.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9P.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9Q.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9R.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9S.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9T.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9U.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9V.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9W.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9X.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9Y.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9Z.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9a.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9b.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9c.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9d.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9e.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9f.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9g.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9h.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9i.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9j.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9k.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9l.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9m.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9n.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9o.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9p.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9q.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9r.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9s.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9t.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9u.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9v.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9w.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9x.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9y.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/train9z.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainA0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainA1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainA2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainA3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainA4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainA5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainA6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainA7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainA8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainA9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainAz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainB0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainB1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainB2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainB3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainB4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainB5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainB6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainB7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainB8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainB9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainBz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainC0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainC1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainC2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainC3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainC4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainC5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainC6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainC7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainC8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainC9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainCz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainD0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainD1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainD2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainD3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainD4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainD5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainD6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainD7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainD8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainD9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainDz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainE0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainE1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainE2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainE3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainE4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainE5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainE6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainE7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainE8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainE9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainED.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainER.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainES.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainET.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainEz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainF0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainF1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainF2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainF3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainF4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainF5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainF6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainF7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainF8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainF9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainFz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainG0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainG1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainG2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainG3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainG4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainG5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainG6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainG7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainG8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainG9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainGz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainH0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainH1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainH2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainH3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainH4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainH5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainH6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainH7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainH8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainH9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainHz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainI0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainI1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainI2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainI3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainI4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainI5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainI6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainI7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainI8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainI9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainID.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainII.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainId.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainIz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJ0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJ1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJ2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJ3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJ4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJ5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJ6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJ7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJ8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJ9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainJz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainK0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainK1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainK2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainK3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainK4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainK5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainK6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainK7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainK8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainK9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainKz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainL0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainL1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainL2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainL3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainL4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainL5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainL6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainL7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainL8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainL9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainLz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainM0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainM1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainM2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainM3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainM4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainM5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainM6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainM7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainM8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainM9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainME.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainML.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainMz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainN0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainN1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainN2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainN3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainN4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainN5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainN6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainN7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainN8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainN9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainND.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainNz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainO0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainO1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainO2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainO3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainO4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainO5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainO6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainO7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainO8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainO9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainON.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainOz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainP0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainP1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainP2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainP3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainP4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainP5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainP6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainP7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainP8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainP9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainPz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQ0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQ1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQ2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQ3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQ4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQ5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQ6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQ7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQ8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQ9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainQz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainR0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainR1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainR2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainR3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainR4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainR5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainR6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainR7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainR8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainR9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainRz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainS0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainS1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainS2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainS3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainS4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainS5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainS6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainS7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainS8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainS9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainST.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainSz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainT0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainT1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainT2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainT3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainT4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainT5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainT6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainT7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainT8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainT9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainTz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainU0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainU1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainU2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainU3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainU4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainU5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainU6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainU7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainU8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainU9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainUz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainV0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainV1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainV2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainV3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainV4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainV5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainV6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainV7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainV8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainV9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainVz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainW0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainW1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainW2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainW3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainW4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainW5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainW6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainW7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainW8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainW9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainWz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainX0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainX1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainX2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainX3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainX4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainX5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainX6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainX7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainX8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainX9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainXz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainY0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainY1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainY2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainY3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainY4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainY5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainY6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainY7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainY8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainY9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainYz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZ0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZ1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZ2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZ3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZ4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZ5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZ6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZ7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZ8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZ9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainZz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traina0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traina1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traina2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traina3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traina4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traina5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traina6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traina7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traina8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traina9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainab.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainac.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainad.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainae.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainag.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainah.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainai.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainak.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainal.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainam.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainan.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainao.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainap.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainar.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainas.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainat.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainau.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainav.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainax.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainay.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainaz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainb0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainb1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainb2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainb3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainb4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainb5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainb6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainb7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainb8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainb9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainba.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainby.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainbz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainc0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainc1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainc2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainc3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainc4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainc5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainc6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainc7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainc8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainc9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainca.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traince.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainch.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainci.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainck.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainco.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainct.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traincz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traind0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traind1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traind2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traind3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traind4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traind5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traind6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traind7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traind8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traind9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainda.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainde.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainds.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traindz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traine0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traine1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traine2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traine3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traine4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traine5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traine6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traine7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traine8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traine9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainea.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainec.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trained.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainee.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainef.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainei.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainej.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainek.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainel.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainem.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainen.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainep.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainer.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traines.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainet.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traineu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainev.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainew.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainex.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainey.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainez.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainf0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainf1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainf2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainf3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainf4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainf5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainf6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainf7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainf8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainf9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainff.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainft.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainfz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traing0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traing1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traing2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traing3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traing4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traing5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traing6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traing7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traing8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traing9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainga.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainge.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traings.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traingz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainh0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainh1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainh2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainh3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainh4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainh5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainh6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainh7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainh8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainh9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainha.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainho.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainht.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainhz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traini0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traini1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traini2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traini3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traini4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traini5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traini6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traini7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traini8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traini9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainia.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainib.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainic.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainid.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainie.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainif.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainig.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainih.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainii.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainij.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainik.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainil.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainim.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainin.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainio.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainip.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainir.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainis.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainit.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainix.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainiz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainj0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainj1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainj2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainj3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainj4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainj5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainj6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainj7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainj8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainj9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainja.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainje.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainji.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainju.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainjz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traink0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traink1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traink2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traink3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traink4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traink5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traink6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traink7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traink8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traink9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainka.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainke.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainki.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainko.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainks.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainku.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainky.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainkz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainl0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainl1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainl2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainl3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainl4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainl5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainl6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainl7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainl8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainl9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainla.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainld.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainle.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainli.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainll.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainln.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainls.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainly.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainlz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainm0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainm1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainm2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainm3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainm4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainm5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainm6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainm7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainm8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainm9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainma.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainme.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainml.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainms.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainmz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainn0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainn1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainn2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainn3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainn4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainn5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainn6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainn7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainn8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainn9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainna.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainne.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainng.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainni.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainno.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainns.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainny.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainnz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traino0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traino1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traino2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traino3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traino4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traino5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traino6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traino7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traino8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traino9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainob.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainod.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainof.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainog.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainok.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainol.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainom.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainon.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainop.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainor.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainos.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainot.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainou.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainov.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainow.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainox.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainoz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainp0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainp1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainp2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainp3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainp4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainp5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainp6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainp7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainp8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainp9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainph.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainps.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainpz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainq0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainq1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainq2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainq3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainq4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainq5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainq6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainq7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainq8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainq9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainql.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainqz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainr0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainr1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainr2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainr3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainr4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainr5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainr6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainr7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainr8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainr9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainra.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainre.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainri.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainro.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainru.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainry.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainrz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trains0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trains1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trains2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trains3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trains4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trains5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trains6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trains7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trains8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trains9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainse.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainso.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainss.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainst.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainsz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traint0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traint1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traint2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traint3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traint4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traint5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traint6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traint7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traint8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traint9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainta.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainte.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainth.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainti.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainto.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traints.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainty.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/traintz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainu0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainu1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainu2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainu3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainu4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainu5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainu6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainu7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainu8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainu9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainua.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainub.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainud.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainue.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainug.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainui.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainul.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainum.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainun.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainup.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainur.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainus.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainut.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainux.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainuz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainv0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainv1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainv2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainv3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainv4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainv5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainv6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainv7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainv8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainv9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainva.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainve.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainvz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainw0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainw1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainw2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainw3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainw4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainw5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainw6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainw7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainw8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainw9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainws.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainww.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainwz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainx0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainx1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainx2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainx3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainx4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainx5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainx6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainx7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainx8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainx9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxa.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxe.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainxz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainy0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainy1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainy2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainy3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainy4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainy5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainy6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainy7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainy8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainy9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainya.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainye.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainym.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainys.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainyz.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainz0.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainz1.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainz2.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainz3.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainz4.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainz5.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainz6.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainz7.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainz8.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainz9.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzA.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzB.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzC.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzD.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzE.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzF.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzG.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzH.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzI.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzJ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzK.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzL.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzM.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzN.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzO.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzP.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzQ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzR.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzS.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzT.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzU.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzV.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzW.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzX.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzY.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzZ.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainza.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzb.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzc.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzd.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainze.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzf.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzg.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzh.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzi.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzj.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzk.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzl.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzm.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzn.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzo.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzp.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzq.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzr.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzs.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzt.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzu.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzv.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzw.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzx.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzy.tfrecord"
        string_val: "gs://youtube8m-ml/2/frame/train/trainzz.tfrecord"
      }
    }
  }
}
node {
  name: "train_input/input_producer/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3844
      }
    }
  }
}
node {
  name: "train_input/input_producer/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/input_producer/Greater"
  op: "Greater"
  input: "train_input/input_producer/Size"
  input: "train_input/input_producer/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input/input_producer/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input/input_producer/Assert/Assert"
  op: "Assert"
  input: "train_input/input_producer/Greater"
  input: "train_input/input_producer/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "train_input/input_producer/Identity"
  op: "Identity"
  input: "train_input/input_producer/Const"
  input: "^train_input/input_producer/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3844
          }
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer/RandomShuffle"
  op: "RandomShuffle"
  input: "train_input/input_producer/Identity"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3844
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/input_producer/limit_epochs/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "train_input/input_producer/limit_epochs/epochs"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/input_producer/limit_epochs/epochs/Assign"
  op: "Assign"
  input: "train_input/input_producer/limit_epochs/epochs"
  input: "train_input/input_producer/limit_epochs/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/input_producer/limit_epochs/epochs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train_input/input_producer/limit_epochs/epochs/read"
  op: "Identity"
  input: "train_input/input_producer/limit_epochs/epochs"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/input_producer/limit_epochs/epochs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer/limit_epochs/CountUpTo"
  op: "CountUpTo"
  input: "train_input/input_producer/limit_epochs/epochs"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/input_producer/limit_epochs/epochs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "limit"
    value {
      i: 5
    }
  }
}
node {
  name: "train_input/input_producer/limit_epochs"
  op: "Identity"
  input: "train_input/input_producer/RandomShuffle"
  input: "^train_input/input_producer/limit_epochs/CountUpTo"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3844
          }
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/input_producer/input_producer_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "train_input/input_producer"
  input: "train_input/input_producer/limit_epochs"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/input_producer/input_producer_Close"
  op: "QueueCloseV2"
  input: "train_input/input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/input_producer/input_producer_Close_1"
  op: "QueueCloseV2"
  input: "train_input/input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input/input_producer/input_producer_Size"
  op: "QueueSizeV2"
  input: "train_input/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer/Cast"
  op: "Cast"
  input: "train_input/input_producer/input_producer_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "train_input/input_producer/mul"
  op: "Mul"
  input: "train_input/input_producer/Cast"
  input: "train_input/input_producer/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input/input_producer/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "train_input/input_producer/fraction_of_32_full"
  op: "ScalarSummary"
  input: "train_input/input_producer/fraction_of_32_full/tags"
  input: "train_input/input_producer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/TFRecordReaderV2"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/ReaderReadV2"
  op: "ReaderReadV2"
  input: "train_input/TFRecordReaderV2"
  input: "train_input/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/context_sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/context_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "id"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/feature_list_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "audio"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/feature_list_dense_keys_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "rgb"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/debug_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample"
  op: "ParseSingleSequenceExample"
  input: "train_input/ReaderReadV2:1"
  input: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  input: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/context_sparse_keys_0"
  input: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/context_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/feature_list_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/feature_list_dense_keys_1"
  input: "train_input/ParseSingleSequenceExample/Const"
  input: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/debug_name"
  attr {
    key: "Ncontext_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Ncontext_sparse"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_dense"
    value {
      i: 2
    }
  }
  attr {
    key: "Nfeature_list_sparse"
    value {
      i: 0
    }
  }
  attr {
    key: "Tcontext_dense"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "context_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "context_sparse_types"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "feature_list_dense_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "feature_list_dense_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "feature_list_sparse_types"
    value {
      list {
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample:5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast"
  op: "Cast"
  input: "train_input/DecodeRaw"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\004\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape"
  op: "Reshape"
  input: "train_input/Cast"
  input: "train_input/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape"
  op: "Shape"
  input: "train_input/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice"
  op: "StridedSlice"
  input: "train_input/Shape"
  input: "train_input/strided_slice/stack"
  input: "train_input/strided_slice/stack_1"
  input: "train_input/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum"
  op: "Minimum"
  input: "train_input/strided_slice"
  input: "train_input/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul"
  op: "Mul"
  input: "train_input/Reshape"
  input: "train_input/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add"
  op: "AddV2"
  input: "train_input/mul"
  input: "train_input/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_1"
  op: "Shape"
  input: "train_input/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack"
  op: "Unpack"
  input: "train_input/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub"
  op: "Sub"
  input: "train_input/sub/x"
  input: "train_input/unstack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum"
  op: "Maximum"
  input: "train_input/Maximum/x"
  input: "train_input/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_1"
  op: "Minimum"
  input: "train_input/unstack"
  input: "train_input/Minimum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack"
  op: "Pack"
  input: "train_input/Minimum_1"
  input: "train_input/unstack:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice"
  op: "Slice"
  input: "train_input/add"
  input: "train_input/zeros_like"
  input: "train_input/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_1"
  op: "Pack"
  input: "train_input/Maximum"
  input: "train_input/unstack:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_1"
  op: "Cast"
  input: "train_input/Cast_1/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill"
  op: "Fill"
  input: "train_input/stack_1"
  input: "train_input/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat"
  op: "ConcatV2"
  input: "train_input/Slice"
  input: "train_input/Fill"
  input: "train_input/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_1"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample:4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_2"
  op: "Cast"
  input: "train_input/DecodeRaw_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_1"
  op: "Reshape"
  input: "train_input/Cast_2"
  input: "train_input/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_2"
  op: "Shape"
  input: "train_input/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_1"
  op: "StridedSlice"
  input: "train_input/Shape_2"
  input: "train_input/strided_slice_1/stack"
  input: "train_input/strided_slice_1/stack_1"
  input: "train_input/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_2"
  op: "Minimum"
  input: "train_input/strided_slice_1"
  input: "train_input/Minimum_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_1"
  op: "Mul"
  input: "train_input/Reshape_1"
  input: "train_input/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_1"
  op: "AddV2"
  input: "train_input/mul_1"
  input: "train_input/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_3"
  op: "Shape"
  input: "train_input/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_1"
  op: "Unpack"
  input: "train_input/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_1"
  op: "Sub"
  input: "train_input/sub_1/x"
  input: "train_input/unstack_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_1"
  op: "Maximum"
  input: "train_input/Maximum_1/x"
  input: "train_input/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_3"
  op: "Minimum"
  input: "train_input/unstack_1"
  input: "train_input/Minimum_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_2"
  op: "Pack"
  input: "train_input/Minimum_3"
  input: "train_input/unstack_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_1"
  op: "Slice"
  input: "train_input/add_1"
  input: "train_input/zeros_like_1"
  input: "train_input/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_3"
  op: "Pack"
  input: "train_input/Maximum_1"
  input: "train_input/unstack_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_3/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_3"
  op: "Cast"
  input: "train_input/Cast_3/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_1"
  op: "Fill"
  input: "train_input/stack_3"
  input: "train_input/Cast_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_1"
  op: "ConcatV2"
  input: "train_input/Slice_1"
  input: "train_input/Fill_1"
  input: "train_input/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_4/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_4"
  op: "Minimum"
  input: "train_input/Minimum"
  input: "train_input/Minimum_4/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/concat_2"
  op: "ConcatV2"
  input: "train_input/concat"
  input: "train_input/concat_1"
  input: "train_input/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train_input/ExpandDims"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample:1"
  input: "train_input/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ones_like/Shape"
  op: "Shape"
  input: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "train_input/ones_like"
  op: "Fill"
  input: "train_input/ones_like/Shape"
  input: "train_input/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/SparseTensor/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 3862
      }
    }
  }
}
node {
  name: "train_input/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "train_input/SparseToDense"
  op: "SparseToDense"
  input: "train_input/ExpandDims"
  input: "train_input/SparseTensor/dense_shape"
  input: "train_input/ones_like"
  input: "train_input/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_1"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample:3"
  input: "train_input/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_2"
  op: "ExpandDims"
  input: "train_input/concat_2"
  input: "train_input/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_3"
  op: "ExpandDims"
  input: "train_input/SparseToDense"
  input: "train_input/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_4/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_4"
  op: "ExpandDims"
  input: "train_input/Minimum_4"
  input: "train_input/ExpandDims_4/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/TFRecordReaderV2_1"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/ReaderReadV2_1"
  op: "ReaderReadV2"
  input: "train_input/TFRecordReaderV2_1"
  input: "train_input/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/context_sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/context_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "id"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/feature_list_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "audio"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/feature_list_dense_keys_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "rgb"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/debug_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample"
  op: "ParseSingleSequenceExample"
  input: "train_input/ReaderReadV2_1:1"
  input: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  input: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/context_sparse_keys_0"
  input: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/context_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/feature_list_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/feature_list_dense_keys_1"
  input: "train_input/ParseSingleSequenceExample_1/Const"
  input: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/debug_name"
  attr {
    key: "Ncontext_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Ncontext_sparse"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_dense"
    value {
      i: 2
    }
  }
  attr {
    key: "Nfeature_list_sparse"
    value {
      i: 0
    }
  }
  attr {
    key: "Tcontext_dense"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "context_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "context_sparse_types"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "feature_list_dense_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "feature_list_dense_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "feature_list_sparse_types"
    value {
      list {
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_2"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample:5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_4"
  op: "Cast"
  input: "train_input/DecodeRaw_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\004\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_2"
  op: "Reshape"
  input: "train_input/Cast_4"
  input: "train_input/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_4"
  op: "Shape"
  input: "train_input/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_2"
  op: "StridedSlice"
  input: "train_input/Shape_4"
  input: "train_input/strided_slice_2/stack"
  input: "train_input/strided_slice_2/stack_1"
  input: "train_input/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_5/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_5"
  op: "Minimum"
  input: "train_input/strided_slice_2"
  input: "train_input/Minimum_5/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_2"
  op: "Mul"
  input: "train_input/Reshape_2"
  input: "train_input/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_2"
  op: "AddV2"
  input: "train_input/mul_2"
  input: "train_input/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_5"
  op: "Shape"
  input: "train_input/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_2"
  op: "Unpack"
  input: "train_input/Shape_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_2"
  op: "Sub"
  input: "train_input/sub_2/x"
  input: "train_input/unstack_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_2"
  op: "Maximum"
  input: "train_input/Maximum_2/x"
  input: "train_input/sub_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_6/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_6"
  op: "Minimum"
  input: "train_input/unstack_2"
  input: "train_input/Minimum_6/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_4"
  op: "Pack"
  input: "train_input/Minimum_6"
  input: "train_input/unstack_2:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_2"
  op: "Slice"
  input: "train_input/add_2"
  input: "train_input/zeros_like_2"
  input: "train_input/stack_4"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_5"
  op: "Pack"
  input: "train_input/Maximum_2"
  input: "train_input/unstack_2:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_5/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_5"
  op: "Cast"
  input: "train_input/Cast_5/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_2"
  op: "Fill"
  input: "train_input/stack_5"
  input: "train_input/Cast_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_3"
  op: "ConcatV2"
  input: "train_input/Slice_2"
  input: "train_input/Fill_2"
  input: "train_input/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_3"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample:4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_6"
  op: "Cast"
  input: "train_input/DecodeRaw_3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_3"
  op: "Reshape"
  input: "train_input/Cast_6"
  input: "train_input/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_6"
  op: "Shape"
  input: "train_input/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_3"
  op: "StridedSlice"
  input: "train_input/Shape_6"
  input: "train_input/strided_slice_3/stack"
  input: "train_input/strided_slice_3/stack_1"
  input: "train_input/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_7/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_7"
  op: "Minimum"
  input: "train_input/strided_slice_3"
  input: "train_input/Minimum_7/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_3"
  op: "Mul"
  input: "train_input/Reshape_3"
  input: "train_input/mul_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_3"
  op: "AddV2"
  input: "train_input/mul_3"
  input: "train_input/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_7"
  op: "Shape"
  input: "train_input/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_3"
  op: "Unpack"
  input: "train_input/Shape_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_3/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_3"
  op: "Sub"
  input: "train_input/sub_3/x"
  input: "train_input/unstack_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_3/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_3"
  op: "Maximum"
  input: "train_input/Maximum_3/x"
  input: "train_input/sub_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_8/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_8"
  op: "Minimum"
  input: "train_input/unstack_3"
  input: "train_input/Minimum_8/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_6"
  op: "Pack"
  input: "train_input/Minimum_8"
  input: "train_input/unstack_3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_3"
  op: "Slice"
  input: "train_input/add_3"
  input: "train_input/zeros_like_3"
  input: "train_input/stack_6"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_7"
  op: "Pack"
  input: "train_input/Maximum_3"
  input: "train_input/unstack_3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_7/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_7"
  op: "Cast"
  input: "train_input/Cast_7/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_3"
  op: "Fill"
  input: "train_input/stack_7"
  input: "train_input/Cast_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_4/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_4"
  op: "ConcatV2"
  input: "train_input/Slice_3"
  input: "train_input/Fill_3"
  input: "train_input/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_9/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_9"
  op: "Minimum"
  input: "train_input/Minimum_5"
  input: "train_input/Minimum_9/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/concat_5/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/concat_5"
  op: "ConcatV2"
  input: "train_input/concat_3"
  input: "train_input/concat_4"
  input: "train_input/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_5/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_5"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample:1"
  input: "train_input/ExpandDims_5/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ones_like_1/Shape"
  op: "Shape"
  input: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/ones_like_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "train_input/ones_like_1"
  op: "Fill"
  input: "train_input/ones_like_1/Shape"
  input: "train_input/ones_like_1/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/SparseTensor_1/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 3862
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_1/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_1"
  op: "SparseToDense"
  input: "train_input/ExpandDims_5"
  input: "train_input/SparseTensor_1/dense_shape"
  input: "train_input/ones_like_1"
  input: "train_input/SparseToDense_1/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/ExpandDims_6/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_6"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample:3"
  input: "train_input/ExpandDims_6/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_7/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_7"
  op: "ExpandDims"
  input: "train_input/concat_5"
  input: "train_input/ExpandDims_7/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_8/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_8"
  op: "ExpandDims"
  input: "train_input/SparseToDense_1"
  input: "train_input/ExpandDims_8/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_9/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_9"
  op: "ExpandDims"
  input: "train_input/Minimum_9"
  input: "train_input/ExpandDims_9/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/TFRecordReaderV2_2"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/ReaderReadV2_2"
  op: "ReaderReadV2"
  input: "train_input/TFRecordReaderV2_2"
  input: "train_input/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/context_sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/context_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "id"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/feature_list_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "audio"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/feature_list_dense_keys_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "rgb"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/debug_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample"
  op: "ParseSingleSequenceExample"
  input: "train_input/ReaderReadV2_2:1"
  input: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  input: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/context_sparse_keys_0"
  input: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/context_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/feature_list_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/feature_list_dense_keys_1"
  input: "train_input/ParseSingleSequenceExample_2/Const"
  input: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/debug_name"
  attr {
    key: "Ncontext_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Ncontext_sparse"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_dense"
    value {
      i: 2
    }
  }
  attr {
    key: "Nfeature_list_sparse"
    value {
      i: 0
    }
  }
  attr {
    key: "Tcontext_dense"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "context_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "context_sparse_types"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "feature_list_dense_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "feature_list_dense_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "feature_list_sparse_types"
    value {
      list {
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_4"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample:5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_8"
  op: "Cast"
  input: "train_input/DecodeRaw_4"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_4/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\004\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_4"
  op: "Reshape"
  input: "train_input/Cast_8"
  input: "train_input/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_8"
  op: "Shape"
  input: "train_input/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_4"
  op: "StridedSlice"
  input: "train_input/Shape_8"
  input: "train_input/strided_slice_4/stack"
  input: "train_input/strided_slice_4/stack_1"
  input: "train_input/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_10/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_10"
  op: "Minimum"
  input: "train_input/strided_slice_4"
  input: "train_input/Minimum_10/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_4/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_4"
  op: "Mul"
  input: "train_input/Reshape_4"
  input: "train_input/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_4/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_4"
  op: "AddV2"
  input: "train_input/mul_4"
  input: "train_input/add_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_9"
  op: "Shape"
  input: "train_input/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_4"
  op: "Unpack"
  input: "train_input/Shape_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_4/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_4"
  op: "Sub"
  input: "train_input/sub_4/x"
  input: "train_input/unstack_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_4/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_4"
  op: "Maximum"
  input: "train_input/Maximum_4/x"
  input: "train_input/sub_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_11/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_11"
  op: "Minimum"
  input: "train_input/unstack_4"
  input: "train_input/Minimum_11/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_8"
  op: "Pack"
  input: "train_input/Minimum_11"
  input: "train_input/unstack_4:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_4"
  op: "Slice"
  input: "train_input/add_4"
  input: "train_input/zeros_like_4"
  input: "train_input/stack_8"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_9"
  op: "Pack"
  input: "train_input/Maximum_4"
  input: "train_input/unstack_4:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_9/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_9"
  op: "Cast"
  input: "train_input/Cast_9/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_4"
  op: "Fill"
  input: "train_input/stack_9"
  input: "train_input/Cast_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_6/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_6"
  op: "ConcatV2"
  input: "train_input/Slice_4"
  input: "train_input/Fill_4"
  input: "train_input/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_5"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample:4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_10"
  op: "Cast"
  input: "train_input/DecodeRaw_5"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_5/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_5"
  op: "Reshape"
  input: "train_input/Cast_10"
  input: "train_input/Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_10"
  op: "Shape"
  input: "train_input/Reshape_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_5"
  op: "StridedSlice"
  input: "train_input/Shape_10"
  input: "train_input/strided_slice_5/stack"
  input: "train_input/strided_slice_5/stack_1"
  input: "train_input/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_12/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_12"
  op: "Minimum"
  input: "train_input/strided_slice_5"
  input: "train_input/Minimum_12/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_5/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_5"
  op: "Mul"
  input: "train_input/Reshape_5"
  input: "train_input/mul_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_5/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_5"
  op: "AddV2"
  input: "train_input/mul_5"
  input: "train_input/add_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_11"
  op: "Shape"
  input: "train_input/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_5"
  op: "Unpack"
  input: "train_input/Shape_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_5/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_5"
  op: "Sub"
  input: "train_input/sub_5/x"
  input: "train_input/unstack_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_5/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_5"
  op: "Maximum"
  input: "train_input/Maximum_5/x"
  input: "train_input/sub_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_13/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_13"
  op: "Minimum"
  input: "train_input/unstack_5"
  input: "train_input/Minimum_13/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_10"
  op: "Pack"
  input: "train_input/Minimum_13"
  input: "train_input/unstack_5:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_5"
  op: "Slice"
  input: "train_input/add_5"
  input: "train_input/zeros_like_5"
  input: "train_input/stack_10"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_11"
  op: "Pack"
  input: "train_input/Maximum_5"
  input: "train_input/unstack_5:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_11/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_11"
  op: "Cast"
  input: "train_input/Cast_11/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_5"
  op: "Fill"
  input: "train_input/stack_11"
  input: "train_input/Cast_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_7/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_7"
  op: "ConcatV2"
  input: "train_input/Slice_5"
  input: "train_input/Fill_5"
  input: "train_input/concat_7/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_14/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_14"
  op: "Minimum"
  input: "train_input/Minimum_10"
  input: "train_input/Minimum_14/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/concat_8/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/concat_8"
  op: "ConcatV2"
  input: "train_input/concat_6"
  input: "train_input/concat_7"
  input: "train_input/concat_8/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_10/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_10"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample:1"
  input: "train_input/ExpandDims_10/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ones_like_2/Shape"
  op: "Shape"
  input: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/ones_like_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "train_input/ones_like_2"
  op: "Fill"
  input: "train_input/ones_like_2/Shape"
  input: "train_input/ones_like_2/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/SparseTensor_2/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 3862
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_2/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_2"
  op: "SparseToDense"
  input: "train_input/ExpandDims_10"
  input: "train_input/SparseTensor_2/dense_shape"
  input: "train_input/ones_like_2"
  input: "train_input/SparseToDense_2/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/ExpandDims_11/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_11"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample:3"
  input: "train_input/ExpandDims_11/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_12/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_12"
  op: "ExpandDims"
  input: "train_input/concat_8"
  input: "train_input/ExpandDims_12/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_13/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_13"
  op: "ExpandDims"
  input: "train_input/SparseToDense_2"
  input: "train_input/ExpandDims_13/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_14/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_14"
  op: "ExpandDims"
  input: "train_input/Minimum_14"
  input: "train_input/ExpandDims_14/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/TFRecordReaderV2_3"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/ReaderReadV2_3"
  op: "ReaderReadV2"
  input: "train_input/TFRecordReaderV2_3"
  input: "train_input/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/context_sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/context_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "id"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/feature_list_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "audio"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/feature_list_dense_keys_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "rgb"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/debug_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample"
  op: "ParseSingleSequenceExample"
  input: "train_input/ReaderReadV2_3:1"
  input: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  input: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/context_sparse_keys_0"
  input: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/context_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/feature_list_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/feature_list_dense_keys_1"
  input: "train_input/ParseSingleSequenceExample_3/Const"
  input: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/debug_name"
  attr {
    key: "Ncontext_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Ncontext_sparse"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_dense"
    value {
      i: 2
    }
  }
  attr {
    key: "Nfeature_list_sparse"
    value {
      i: 0
    }
  }
  attr {
    key: "Tcontext_dense"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "context_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "context_sparse_types"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "feature_list_dense_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "feature_list_dense_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "feature_list_sparse_types"
    value {
      list {
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_6"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample:5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_12"
  op: "Cast"
  input: "train_input/DecodeRaw_6"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_6/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\004\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_6"
  op: "Reshape"
  input: "train_input/Cast_12"
  input: "train_input/Reshape_6/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_12"
  op: "Shape"
  input: "train_input/Reshape_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_6"
  op: "StridedSlice"
  input: "train_input/Shape_12"
  input: "train_input/strided_slice_6/stack"
  input: "train_input/strided_slice_6/stack_1"
  input: "train_input/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_15/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_15"
  op: "Minimum"
  input: "train_input/strided_slice_6"
  input: "train_input/Minimum_15/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_6/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_6"
  op: "Mul"
  input: "train_input/Reshape_6"
  input: "train_input/mul_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_6/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_6"
  op: "AddV2"
  input: "train_input/mul_6"
  input: "train_input/add_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_13"
  op: "Shape"
  input: "train_input/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_6"
  op: "Unpack"
  input: "train_input/Shape_13"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_6/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_6"
  op: "Sub"
  input: "train_input/sub_6/x"
  input: "train_input/unstack_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_6/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_6"
  op: "Maximum"
  input: "train_input/Maximum_6/x"
  input: "train_input/sub_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_16/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_16"
  op: "Minimum"
  input: "train_input/unstack_6"
  input: "train_input/Minimum_16/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_12"
  op: "Pack"
  input: "train_input/Minimum_16"
  input: "train_input/unstack_6:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_6"
  op: "Slice"
  input: "train_input/add_6"
  input: "train_input/zeros_like_6"
  input: "train_input/stack_12"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_13"
  op: "Pack"
  input: "train_input/Maximum_6"
  input: "train_input/unstack_6:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_13/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_13"
  op: "Cast"
  input: "train_input/Cast_13/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_6"
  op: "Fill"
  input: "train_input/stack_13"
  input: "train_input/Cast_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_9/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_9"
  op: "ConcatV2"
  input: "train_input/Slice_6"
  input: "train_input/Fill_6"
  input: "train_input/concat_9/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_7"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample:4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_14"
  op: "Cast"
  input: "train_input/DecodeRaw_7"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_7/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_7"
  op: "Reshape"
  input: "train_input/Cast_14"
  input: "train_input/Reshape_7/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_14"
  op: "Shape"
  input: "train_input/Reshape_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_7"
  op: "StridedSlice"
  input: "train_input/Shape_14"
  input: "train_input/strided_slice_7/stack"
  input: "train_input/strided_slice_7/stack_1"
  input: "train_input/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_17/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_17"
  op: "Minimum"
  input: "train_input/strided_slice_7"
  input: "train_input/Minimum_17/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_7/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_7"
  op: "Mul"
  input: "train_input/Reshape_7"
  input: "train_input/mul_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_7/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_7"
  op: "AddV2"
  input: "train_input/mul_7"
  input: "train_input/add_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_15"
  op: "Shape"
  input: "train_input/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_7"
  op: "Unpack"
  input: "train_input/Shape_15"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_7/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_7"
  op: "Sub"
  input: "train_input/sub_7/x"
  input: "train_input/unstack_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_7/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_7"
  op: "Maximum"
  input: "train_input/Maximum_7/x"
  input: "train_input/sub_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_18/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_18"
  op: "Minimum"
  input: "train_input/unstack_7"
  input: "train_input/Minimum_18/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_14"
  op: "Pack"
  input: "train_input/Minimum_18"
  input: "train_input/unstack_7:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_7"
  op: "Slice"
  input: "train_input/add_7"
  input: "train_input/zeros_like_7"
  input: "train_input/stack_14"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_15"
  op: "Pack"
  input: "train_input/Maximum_7"
  input: "train_input/unstack_7:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_15/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_15"
  op: "Cast"
  input: "train_input/Cast_15/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_7"
  op: "Fill"
  input: "train_input/stack_15"
  input: "train_input/Cast_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_10/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_10"
  op: "ConcatV2"
  input: "train_input/Slice_7"
  input: "train_input/Fill_7"
  input: "train_input/concat_10/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_19/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_19"
  op: "Minimum"
  input: "train_input/Minimum_15"
  input: "train_input/Minimum_19/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/concat_11/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/concat_11"
  op: "ConcatV2"
  input: "train_input/concat_9"
  input: "train_input/concat_10"
  input: "train_input/concat_11/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_15/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_15"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample:1"
  input: "train_input/ExpandDims_15/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ones_like_3/Shape"
  op: "Shape"
  input: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/ones_like_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "train_input/ones_like_3"
  op: "Fill"
  input: "train_input/ones_like_3/Shape"
  input: "train_input/ones_like_3/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/SparseTensor_3/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 3862
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_3/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_3"
  op: "SparseToDense"
  input: "train_input/ExpandDims_15"
  input: "train_input/SparseTensor_3/dense_shape"
  input: "train_input/ones_like_3"
  input: "train_input/SparseToDense_3/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/ExpandDims_16/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_16"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample:3"
  input: "train_input/ExpandDims_16/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_17/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_17"
  op: "ExpandDims"
  input: "train_input/concat_11"
  input: "train_input/ExpandDims_17/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_18/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_18"
  op: "ExpandDims"
  input: "train_input/SparseToDense_3"
  input: "train_input/ExpandDims_18/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_19/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_19"
  op: "ExpandDims"
  input: "train_input/Minimum_19"
  input: "train_input/ExpandDims_19/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/TFRecordReaderV2_4"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/ReaderReadV2_4"
  op: "ReaderReadV2"
  input: "train_input/TFRecordReaderV2_4"
  input: "train_input/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/context_sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/context_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "id"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/feature_list_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "audio"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/feature_list_dense_keys_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "rgb"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/debug_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample"
  op: "ParseSingleSequenceExample"
  input: "train_input/ReaderReadV2_4:1"
  input: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  input: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/context_sparse_keys_0"
  input: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/context_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/feature_list_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/feature_list_dense_keys_1"
  input: "train_input/ParseSingleSequenceExample_4/Const"
  input: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/debug_name"
  attr {
    key: "Ncontext_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Ncontext_sparse"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_dense"
    value {
      i: 2
    }
  }
  attr {
    key: "Nfeature_list_sparse"
    value {
      i: 0
    }
  }
  attr {
    key: "Tcontext_dense"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "context_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "context_sparse_types"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "feature_list_dense_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "feature_list_dense_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "feature_list_sparse_types"
    value {
      list {
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_8"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample:5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_16"
  op: "Cast"
  input: "train_input/DecodeRaw_8"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_8/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\004\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_8"
  op: "Reshape"
  input: "train_input/Cast_16"
  input: "train_input/Reshape_8/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_16"
  op: "Shape"
  input: "train_input/Reshape_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_8"
  op: "StridedSlice"
  input: "train_input/Shape_16"
  input: "train_input/strided_slice_8/stack"
  input: "train_input/strided_slice_8/stack_1"
  input: "train_input/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_20/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_20"
  op: "Minimum"
  input: "train_input/strided_slice_8"
  input: "train_input/Minimum_20/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_8/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_8"
  op: "Mul"
  input: "train_input/Reshape_8"
  input: "train_input/mul_8/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_8/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_8"
  op: "AddV2"
  input: "train_input/mul_8"
  input: "train_input/add_8/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_17"
  op: "Shape"
  input: "train_input/add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_8"
  op: "Unpack"
  input: "train_input/Shape_17"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_8/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_8"
  op: "Sub"
  input: "train_input/sub_8/x"
  input: "train_input/unstack_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_8/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_8"
  op: "Maximum"
  input: "train_input/Maximum_8/x"
  input: "train_input/sub_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_21/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_21"
  op: "Minimum"
  input: "train_input/unstack_8"
  input: "train_input/Minimum_21/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_16"
  op: "Pack"
  input: "train_input/Minimum_21"
  input: "train_input/unstack_8:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_8"
  op: "Slice"
  input: "train_input/add_8"
  input: "train_input/zeros_like_8"
  input: "train_input/stack_16"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_17"
  op: "Pack"
  input: "train_input/Maximum_8"
  input: "train_input/unstack_8:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_17/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_17"
  op: "Cast"
  input: "train_input/Cast_17/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_8"
  op: "Fill"
  input: "train_input/stack_17"
  input: "train_input/Cast_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_12/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_12"
  op: "ConcatV2"
  input: "train_input/Slice_8"
  input: "train_input/Fill_8"
  input: "train_input/concat_12/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_9"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample:4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_18"
  op: "Cast"
  input: "train_input/DecodeRaw_9"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_9/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_9"
  op: "Reshape"
  input: "train_input/Cast_18"
  input: "train_input/Reshape_9/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_18"
  op: "Shape"
  input: "train_input/Reshape_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_9/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_9/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_9/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_9"
  op: "StridedSlice"
  input: "train_input/Shape_18"
  input: "train_input/strided_slice_9/stack"
  input: "train_input/strided_slice_9/stack_1"
  input: "train_input/strided_slice_9/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_22/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_22"
  op: "Minimum"
  input: "train_input/strided_slice_9"
  input: "train_input/Minimum_22/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_9/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_9"
  op: "Mul"
  input: "train_input/Reshape_9"
  input: "train_input/mul_9/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_9/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_9"
  op: "AddV2"
  input: "train_input/mul_9"
  input: "train_input/add_9/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_19"
  op: "Shape"
  input: "train_input/add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_9"
  op: "Unpack"
  input: "train_input/Shape_19"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_9/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_9"
  op: "Sub"
  input: "train_input/sub_9/x"
  input: "train_input/unstack_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_9/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_9"
  op: "Maximum"
  input: "train_input/Maximum_9/x"
  input: "train_input/sub_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_23/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_23"
  op: "Minimum"
  input: "train_input/unstack_9"
  input: "train_input/Minimum_23/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_18"
  op: "Pack"
  input: "train_input/Minimum_23"
  input: "train_input/unstack_9:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_9"
  op: "Slice"
  input: "train_input/add_9"
  input: "train_input/zeros_like_9"
  input: "train_input/stack_18"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_19"
  op: "Pack"
  input: "train_input/Maximum_9"
  input: "train_input/unstack_9:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_19/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_19"
  op: "Cast"
  input: "train_input/Cast_19/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_9"
  op: "Fill"
  input: "train_input/stack_19"
  input: "train_input/Cast_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_13/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_13"
  op: "ConcatV2"
  input: "train_input/Slice_9"
  input: "train_input/Fill_9"
  input: "train_input/concat_13/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_24/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_24"
  op: "Minimum"
  input: "train_input/Minimum_20"
  input: "train_input/Minimum_24/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/concat_14/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/concat_14"
  op: "ConcatV2"
  input: "train_input/concat_12"
  input: "train_input/concat_13"
  input: "train_input/concat_14/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_20/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_20"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample:1"
  input: "train_input/ExpandDims_20/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ones_like_4/Shape"
  op: "Shape"
  input: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/ones_like_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "train_input/ones_like_4"
  op: "Fill"
  input: "train_input/ones_like_4/Shape"
  input: "train_input/ones_like_4/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/SparseTensor_4/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 3862
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_4/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_4"
  op: "SparseToDense"
  input: "train_input/ExpandDims_20"
  input: "train_input/SparseTensor_4/dense_shape"
  input: "train_input/ones_like_4"
  input: "train_input/SparseToDense_4/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/ExpandDims_21/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_21"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample:3"
  input: "train_input/ExpandDims_21/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_22/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_22"
  op: "ExpandDims"
  input: "train_input/concat_14"
  input: "train_input/ExpandDims_22/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_23/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_23"
  op: "ExpandDims"
  input: "train_input/SparseToDense_4"
  input: "train_input/ExpandDims_23/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_24/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_24"
  op: "ExpandDims"
  input: "train_input/Minimum_24"
  input: "train_input/ExpandDims_24/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/TFRecordReaderV2_5"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/ReaderReadV2_5"
  op: "ReaderReadV2"
  input: "train_input/TFRecordReaderV2_5"
  input: "train_input/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/context_sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/context_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "id"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/feature_list_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "audio"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/feature_list_dense_keys_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "rgb"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/debug_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample"
  op: "ParseSingleSequenceExample"
  input: "train_input/ReaderReadV2_5:1"
  input: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  input: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/context_sparse_keys_0"
  input: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/context_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/feature_list_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/feature_list_dense_keys_1"
  input: "train_input/ParseSingleSequenceExample_5/Const"
  input: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/debug_name"
  attr {
    key: "Ncontext_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Ncontext_sparse"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_dense"
    value {
      i: 2
    }
  }
  attr {
    key: "Nfeature_list_sparse"
    value {
      i: 0
    }
  }
  attr {
    key: "Tcontext_dense"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "context_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "context_sparse_types"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "feature_list_dense_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "feature_list_dense_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "feature_list_sparse_types"
    value {
      list {
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_10"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample:5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_20"
  op: "Cast"
  input: "train_input/DecodeRaw_10"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_10/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\004\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_10"
  op: "Reshape"
  input: "train_input/Cast_20"
  input: "train_input/Reshape_10/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_20"
  op: "Shape"
  input: "train_input/Reshape_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_10/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_10/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_10/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_10"
  op: "StridedSlice"
  input: "train_input/Shape_20"
  input: "train_input/strided_slice_10/stack"
  input: "train_input/strided_slice_10/stack_1"
  input: "train_input/strided_slice_10/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_25/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_25"
  op: "Minimum"
  input: "train_input/strided_slice_10"
  input: "train_input/Minimum_25/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_10/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_10"
  op: "Mul"
  input: "train_input/Reshape_10"
  input: "train_input/mul_10/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_10/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_10"
  op: "AddV2"
  input: "train_input/mul_10"
  input: "train_input/add_10/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_21"
  op: "Shape"
  input: "train_input/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_10"
  op: "Unpack"
  input: "train_input/Shape_21"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_10/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_10"
  op: "Sub"
  input: "train_input/sub_10/x"
  input: "train_input/unstack_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_10/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_10"
  op: "Maximum"
  input: "train_input/Maximum_10/x"
  input: "train_input/sub_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_26/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_26"
  op: "Minimum"
  input: "train_input/unstack_10"
  input: "train_input/Minimum_26/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_20"
  op: "Pack"
  input: "train_input/Minimum_26"
  input: "train_input/unstack_10:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_10"
  op: "Slice"
  input: "train_input/add_10"
  input: "train_input/zeros_like_10"
  input: "train_input/stack_20"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_21"
  op: "Pack"
  input: "train_input/Maximum_10"
  input: "train_input/unstack_10:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_21/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_21"
  op: "Cast"
  input: "train_input/Cast_21/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_10"
  op: "Fill"
  input: "train_input/stack_21"
  input: "train_input/Cast_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_15/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_15"
  op: "ConcatV2"
  input: "train_input/Slice_10"
  input: "train_input/Fill_10"
  input: "train_input/concat_15/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_11"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample:4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_22"
  op: "Cast"
  input: "train_input/DecodeRaw_11"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_11/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_11"
  op: "Reshape"
  input: "train_input/Cast_22"
  input: "train_input/Reshape_11/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_22"
  op: "Shape"
  input: "train_input/Reshape_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_11/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_11/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_11/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_11"
  op: "StridedSlice"
  input: "train_input/Shape_22"
  input: "train_input/strided_slice_11/stack"
  input: "train_input/strided_slice_11/stack_1"
  input: "train_input/strided_slice_11/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_27/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_27"
  op: "Minimum"
  input: "train_input/strided_slice_11"
  input: "train_input/Minimum_27/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_11/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_11"
  op: "Mul"
  input: "train_input/Reshape_11"
  input: "train_input/mul_11/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_11/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_11"
  op: "AddV2"
  input: "train_input/mul_11"
  input: "train_input/add_11/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_23"
  op: "Shape"
  input: "train_input/add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_11"
  op: "Unpack"
  input: "train_input/Shape_23"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_11/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_11"
  op: "Sub"
  input: "train_input/sub_11/x"
  input: "train_input/unstack_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_11/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_11"
  op: "Maximum"
  input: "train_input/Maximum_11/x"
  input: "train_input/sub_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_28/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_28"
  op: "Minimum"
  input: "train_input/unstack_11"
  input: "train_input/Minimum_28/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_22"
  op: "Pack"
  input: "train_input/Minimum_28"
  input: "train_input/unstack_11:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_11"
  op: "Slice"
  input: "train_input/add_11"
  input: "train_input/zeros_like_11"
  input: "train_input/stack_22"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_23"
  op: "Pack"
  input: "train_input/Maximum_11"
  input: "train_input/unstack_11:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_23/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_23"
  op: "Cast"
  input: "train_input/Cast_23/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_11"
  op: "Fill"
  input: "train_input/stack_23"
  input: "train_input/Cast_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_16/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_16"
  op: "ConcatV2"
  input: "train_input/Slice_11"
  input: "train_input/Fill_11"
  input: "train_input/concat_16/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_29/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_29"
  op: "Minimum"
  input: "train_input/Minimum_25"
  input: "train_input/Minimum_29/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/concat_17/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/concat_17"
  op: "ConcatV2"
  input: "train_input/concat_15"
  input: "train_input/concat_16"
  input: "train_input/concat_17/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_25/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_25"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample:1"
  input: "train_input/ExpandDims_25/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ones_like_5/Shape"
  op: "Shape"
  input: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/ones_like_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "train_input/ones_like_5"
  op: "Fill"
  input: "train_input/ones_like_5/Shape"
  input: "train_input/ones_like_5/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/SparseTensor_5/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 3862
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_5/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_5"
  op: "SparseToDense"
  input: "train_input/ExpandDims_25"
  input: "train_input/SparseTensor_5/dense_shape"
  input: "train_input/ones_like_5"
  input: "train_input/SparseToDense_5/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/ExpandDims_26/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_26"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample:3"
  input: "train_input/ExpandDims_26/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_27/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_27"
  op: "ExpandDims"
  input: "train_input/concat_17"
  input: "train_input/ExpandDims_27/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_28/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_28"
  op: "ExpandDims"
  input: "train_input/SparseToDense_5"
  input: "train_input/ExpandDims_28/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_29/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_29"
  op: "ExpandDims"
  input: "train_input/Minimum_29"
  input: "train_input/ExpandDims_29/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/TFRecordReaderV2_6"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/ReaderReadV2_6"
  op: "ReaderReadV2"
  input: "train_input/TFRecordReaderV2_6"
  input: "train_input/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_6/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/context_sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/context_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "id"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/feature_list_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "audio"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/feature_list_dense_keys_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "rgb"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/debug_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample"
  op: "ParseSingleSequenceExample"
  input: "train_input/ReaderReadV2_6:1"
  input: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  input: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/context_sparse_keys_0"
  input: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/context_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/feature_list_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/feature_list_dense_keys_1"
  input: "train_input/ParseSingleSequenceExample_6/Const"
  input: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/debug_name"
  attr {
    key: "Ncontext_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Ncontext_sparse"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_dense"
    value {
      i: 2
    }
  }
  attr {
    key: "Nfeature_list_sparse"
    value {
      i: 0
    }
  }
  attr {
    key: "Tcontext_dense"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "context_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "context_sparse_types"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "feature_list_dense_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "feature_list_dense_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "feature_list_sparse_types"
    value {
      list {
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_12"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample:5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_24"
  op: "Cast"
  input: "train_input/DecodeRaw_12"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_12/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\004\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_12"
  op: "Reshape"
  input: "train_input/Cast_24"
  input: "train_input/Reshape_12/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_24"
  op: "Shape"
  input: "train_input/Reshape_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_12/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_12/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_12/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_12"
  op: "StridedSlice"
  input: "train_input/Shape_24"
  input: "train_input/strided_slice_12/stack"
  input: "train_input/strided_slice_12/stack_1"
  input: "train_input/strided_slice_12/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_30/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_30"
  op: "Minimum"
  input: "train_input/strided_slice_12"
  input: "train_input/Minimum_30/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_12/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_12"
  op: "Mul"
  input: "train_input/Reshape_12"
  input: "train_input/mul_12/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_12/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_12"
  op: "AddV2"
  input: "train_input/mul_12"
  input: "train_input/add_12/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_25"
  op: "Shape"
  input: "train_input/add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_12"
  op: "Unpack"
  input: "train_input/Shape_25"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_12/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_12"
  op: "Sub"
  input: "train_input/sub_12/x"
  input: "train_input/unstack_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_12/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_12"
  op: "Maximum"
  input: "train_input/Maximum_12/x"
  input: "train_input/sub_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_31/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_31"
  op: "Minimum"
  input: "train_input/unstack_12"
  input: "train_input/Minimum_31/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_24"
  op: "Pack"
  input: "train_input/Minimum_31"
  input: "train_input/unstack_12:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_12"
  op: "Slice"
  input: "train_input/add_12"
  input: "train_input/zeros_like_12"
  input: "train_input/stack_24"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_25"
  op: "Pack"
  input: "train_input/Maximum_12"
  input: "train_input/unstack_12:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_25/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_25"
  op: "Cast"
  input: "train_input/Cast_25/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_12"
  op: "Fill"
  input: "train_input/stack_25"
  input: "train_input/Cast_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_18/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_18"
  op: "ConcatV2"
  input: "train_input/Slice_12"
  input: "train_input/Fill_12"
  input: "train_input/concat_18/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_13"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample:4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_26"
  op: "Cast"
  input: "train_input/DecodeRaw_13"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_13/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_13"
  op: "Reshape"
  input: "train_input/Cast_26"
  input: "train_input/Reshape_13/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_26"
  op: "Shape"
  input: "train_input/Reshape_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_13/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_13/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_13/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_13"
  op: "StridedSlice"
  input: "train_input/Shape_26"
  input: "train_input/strided_slice_13/stack"
  input: "train_input/strided_slice_13/stack_1"
  input: "train_input/strided_slice_13/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_32/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_32"
  op: "Minimum"
  input: "train_input/strided_slice_13"
  input: "train_input/Minimum_32/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_13/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_13"
  op: "Mul"
  input: "train_input/Reshape_13"
  input: "train_input/mul_13/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_13/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_13"
  op: "AddV2"
  input: "train_input/mul_13"
  input: "train_input/add_13/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_27"
  op: "Shape"
  input: "train_input/add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_13"
  op: "Unpack"
  input: "train_input/Shape_27"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_13/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_13"
  op: "Sub"
  input: "train_input/sub_13/x"
  input: "train_input/unstack_13"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_13/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_13"
  op: "Maximum"
  input: "train_input/Maximum_13/x"
  input: "train_input/sub_13"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_33/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_33"
  op: "Minimum"
  input: "train_input/unstack_13"
  input: "train_input/Minimum_33/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_26"
  op: "Pack"
  input: "train_input/Minimum_33"
  input: "train_input/unstack_13:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_13"
  op: "Slice"
  input: "train_input/add_13"
  input: "train_input/zeros_like_13"
  input: "train_input/stack_26"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_27"
  op: "Pack"
  input: "train_input/Maximum_13"
  input: "train_input/unstack_13:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_27/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_27"
  op: "Cast"
  input: "train_input/Cast_27/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_13"
  op: "Fill"
  input: "train_input/stack_27"
  input: "train_input/Cast_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_19/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_19"
  op: "ConcatV2"
  input: "train_input/Slice_13"
  input: "train_input/Fill_13"
  input: "train_input/concat_19/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_34/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_34"
  op: "Minimum"
  input: "train_input/Minimum_30"
  input: "train_input/Minimum_34/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/concat_20/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/concat_20"
  op: "ConcatV2"
  input: "train_input/concat_18"
  input: "train_input/concat_19"
  input: "train_input/concat_20/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_30/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_30"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample:1"
  input: "train_input/ExpandDims_30/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ones_like_6/Shape"
  op: "Shape"
  input: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/ones_like_6/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "train_input/ones_like_6"
  op: "Fill"
  input: "train_input/ones_like_6/Shape"
  input: "train_input/ones_like_6/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/SparseTensor_6/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 3862
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_6/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_6"
  op: "SparseToDense"
  input: "train_input/ExpandDims_30"
  input: "train_input/SparseTensor_6/dense_shape"
  input: "train_input/ones_like_6"
  input: "train_input/SparseToDense_6/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/ExpandDims_31/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_31"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample:3"
  input: "train_input/ExpandDims_31/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_32/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_32"
  op: "ExpandDims"
  input: "train_input/concat_20"
  input: "train_input/ExpandDims_32/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_33/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_33"
  op: "ExpandDims"
  input: "train_input/SparseToDense_6"
  input: "train_input/ExpandDims_33/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_34/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_34"
  op: "ExpandDims"
  input: "train_input/Minimum_34"
  input: "train_input/ExpandDims_34/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/TFRecordReaderV2_7"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/ReaderReadV2_7"
  op: "ReaderReadV2"
  input: "train_input/TFRecordReaderV2_7"
  input: "train_input/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_7/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/context_sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/context_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "id"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/feature_list_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "audio"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/feature_list_dense_keys_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "rgb"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/debug_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample"
  op: "ParseSingleSequenceExample"
  input: "train_input/ReaderReadV2_7:1"
  input: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  input: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/context_sparse_keys_0"
  input: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/context_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/feature_list_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/feature_list_dense_keys_1"
  input: "train_input/ParseSingleSequenceExample_7/Const"
  input: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/debug_name"
  attr {
    key: "Ncontext_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Ncontext_sparse"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_dense"
    value {
      i: 2
    }
  }
  attr {
    key: "Nfeature_list_sparse"
    value {
      i: 0
    }
  }
  attr {
    key: "Tcontext_dense"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "context_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "context_sparse_types"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "feature_list_dense_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "feature_list_dense_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "feature_list_sparse_types"
    value {
      list {
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_14"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample:5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_28"
  op: "Cast"
  input: "train_input/DecodeRaw_14"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_14/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\004\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_14"
  op: "Reshape"
  input: "train_input/Cast_28"
  input: "train_input/Reshape_14/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_28"
  op: "Shape"
  input: "train_input/Reshape_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_14/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_14/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_14/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_14"
  op: "StridedSlice"
  input: "train_input/Shape_28"
  input: "train_input/strided_slice_14/stack"
  input: "train_input/strided_slice_14/stack_1"
  input: "train_input/strided_slice_14/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_35/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_35"
  op: "Minimum"
  input: "train_input/strided_slice_14"
  input: "train_input/Minimum_35/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_14/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_14"
  op: "Mul"
  input: "train_input/Reshape_14"
  input: "train_input/mul_14/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_14/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_14"
  op: "AddV2"
  input: "train_input/mul_14"
  input: "train_input/add_14/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_29"
  op: "Shape"
  input: "train_input/add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_14"
  op: "Unpack"
  input: "train_input/Shape_29"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_14/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_14"
  op: "Sub"
  input: "train_input/sub_14/x"
  input: "train_input/unstack_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_14/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_14"
  op: "Maximum"
  input: "train_input/Maximum_14/x"
  input: "train_input/sub_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_36/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_36"
  op: "Minimum"
  input: "train_input/unstack_14"
  input: "train_input/Minimum_36/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_28"
  op: "Pack"
  input: "train_input/Minimum_36"
  input: "train_input/unstack_14:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_14"
  op: "Slice"
  input: "train_input/add_14"
  input: "train_input/zeros_like_14"
  input: "train_input/stack_28"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_29"
  op: "Pack"
  input: "train_input/Maximum_14"
  input: "train_input/unstack_14:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_29/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_29"
  op: "Cast"
  input: "train_input/Cast_29/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_14"
  op: "Fill"
  input: "train_input/stack_29"
  input: "train_input/Cast_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_21/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_21"
  op: "ConcatV2"
  input: "train_input/Slice_14"
  input: "train_input/Fill_14"
  input: "train_input/concat_21/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_15"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample:4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_30"
  op: "Cast"
  input: "train_input/DecodeRaw_15"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_15/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_15"
  op: "Reshape"
  input: "train_input/Cast_30"
  input: "train_input/Reshape_15/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_30"
  op: "Shape"
  input: "train_input/Reshape_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_15/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_15/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_15/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_15"
  op: "StridedSlice"
  input: "train_input/Shape_30"
  input: "train_input/strided_slice_15/stack"
  input: "train_input/strided_slice_15/stack_1"
  input: "train_input/strided_slice_15/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_37/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_37"
  op: "Minimum"
  input: "train_input/strided_slice_15"
  input: "train_input/Minimum_37/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_15/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_15"
  op: "Mul"
  input: "train_input/Reshape_15"
  input: "train_input/mul_15/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_15/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_15"
  op: "AddV2"
  input: "train_input/mul_15"
  input: "train_input/add_15/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_31"
  op: "Shape"
  input: "train_input/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_15"
  op: "Unpack"
  input: "train_input/Shape_31"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_15/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_15"
  op: "Sub"
  input: "train_input/sub_15/x"
  input: "train_input/unstack_15"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_15/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_15"
  op: "Maximum"
  input: "train_input/Maximum_15/x"
  input: "train_input/sub_15"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_38/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_38"
  op: "Minimum"
  input: "train_input/unstack_15"
  input: "train_input/Minimum_38/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_30"
  op: "Pack"
  input: "train_input/Minimum_38"
  input: "train_input/unstack_15:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_15"
  op: "Slice"
  input: "train_input/add_15"
  input: "train_input/zeros_like_15"
  input: "train_input/stack_30"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_31"
  op: "Pack"
  input: "train_input/Maximum_15"
  input: "train_input/unstack_15:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_31/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_31"
  op: "Cast"
  input: "train_input/Cast_31/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_15"
  op: "Fill"
  input: "train_input/stack_31"
  input: "train_input/Cast_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_22/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_22"
  op: "ConcatV2"
  input: "train_input/Slice_15"
  input: "train_input/Fill_15"
  input: "train_input/concat_22/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_39/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_39"
  op: "Minimum"
  input: "train_input/Minimum_35"
  input: "train_input/Minimum_39/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/concat_23/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/concat_23"
  op: "ConcatV2"
  input: "train_input/concat_21"
  input: "train_input/concat_22"
  input: "train_input/concat_23/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_35/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_35"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample:1"
  input: "train_input/ExpandDims_35/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ones_like_7/Shape"
  op: "Shape"
  input: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/ones_like_7/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "train_input/ones_like_7"
  op: "Fill"
  input: "train_input/ones_like_7/Shape"
  input: "train_input/ones_like_7/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/SparseTensor_7/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 3862
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_7/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_7"
  op: "SparseToDense"
  input: "train_input/ExpandDims_35"
  input: "train_input/SparseTensor_7/dense_shape"
  input: "train_input/ones_like_7"
  input: "train_input/SparseToDense_7/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/ExpandDims_36/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_36"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample:3"
  input: "train_input/ExpandDims_36/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_37/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_37"
  op: "ExpandDims"
  input: "train_input/concat_23"
  input: "train_input/ExpandDims_37/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_38/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_38"
  op: "ExpandDims"
  input: "train_input/SparseToDense_7"
  input: "train_input/ExpandDims_38/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_39/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_39"
  op: "ExpandDims"
  input: "train_input/Minimum_39"
  input: "train_input/ExpandDims_39/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue"
  op: "RandomShuffleQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5120
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_BOOL
        type: DT_INT32
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "min_after_dequeue"
    value {
      i: 1024
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: 300
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  input: "train_input/ExpandDims_3"
  input: "train_input/ExpandDims_4"
  input: "train_input/ExpandDims_1"
  input: "train_input/ExpandDims_2"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_BOOL
        type: DT_INT32
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_EnqueueMany_1"
  op: "QueueEnqueueManyV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  input: "train_input/ExpandDims_8"
  input: "train_input/ExpandDims_9"
  input: "train_input/ExpandDims_6"
  input: "train_input/ExpandDims_7"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_BOOL
        type: DT_INT32
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_EnqueueMany_2"
  op: "QueueEnqueueManyV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  input: "train_input/ExpandDims_13"
  input: "train_input/ExpandDims_14"
  input: "train_input/ExpandDims_11"
  input: "train_input/ExpandDims_12"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_BOOL
        type: DT_INT32
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_EnqueueMany_3"
  op: "QueueEnqueueManyV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  input: "train_input/ExpandDims_18"
  input: "train_input/ExpandDims_19"
  input: "train_input/ExpandDims_16"
  input: "train_input/ExpandDims_17"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_BOOL
        type: DT_INT32
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_EnqueueMany_4"
  op: "QueueEnqueueManyV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  input: "train_input/ExpandDims_23"
  input: "train_input/ExpandDims_24"
  input: "train_input/ExpandDims_21"
  input: "train_input/ExpandDims_22"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_BOOL
        type: DT_INT32
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_EnqueueMany_5"
  op: "QueueEnqueueManyV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  input: "train_input/ExpandDims_28"
  input: "train_input/ExpandDims_29"
  input: "train_input/ExpandDims_26"
  input: "train_input/ExpandDims_27"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_BOOL
        type: DT_INT32
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_EnqueueMany_6"
  op: "QueueEnqueueManyV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  input: "train_input/ExpandDims_33"
  input: "train_input/ExpandDims_34"
  input: "train_input/ExpandDims_31"
  input: "train_input/ExpandDims_32"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_BOOL
        type: DT_INT32
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_EnqueueMany_7"
  op: "QueueEnqueueManyV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  input: "train_input/ExpandDims_38"
  input: "train_input/ExpandDims_39"
  input: "train_input/ExpandDims_36"
  input: "train_input/ExpandDims_37"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_BOOL
        type: DT_INT32
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_Close"
  op: "QueueCloseV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_Close_1"
  op: "QueueCloseV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_Size"
  op: "QueueSizeV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/sub"
  op: "Sub"
  input: "train_input/shuffle_batch_join/random_shuffle_queue_Size"
  input: "train_input/shuffle_batch_join/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/Maximum"
  op: "Maximum"
  input: "train_input/shuffle_batch_join/Maximum/x"
  input: "train_input/shuffle_batch_join/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/Cast"
  op: "Cast"
  input: "train_input/shuffle_batch_join/Maximum"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.000244140625
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/mul"
  op: "Mul"
  input: "train_input/shuffle_batch_join/Cast"
  input: "train_input/shuffle_batch_join/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/fraction_over_1024_of_4096_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input/shuffle_batch_join/fraction_over_1024_of_4096_full"
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/fraction_over_1024_of_4096_full"
  op: "ScalarSummary"
  input: "train_input/shuffle_batch_join/fraction_over_1024_of_4096_full/tags"
  input: "train_input/shuffle_batch_join/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join"
  op: "QueueDequeueUpToV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  input: "train_input/shuffle_batch_join/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_BOOL
        type: DT_INT32
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "model/input_raw/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/input_raw"
      }
    }
  }
}
node {
  name: "model/input_raw"
  op: "HistogramSummary"
  input: "model/input_raw/tag"
  input: "train_input/shuffle_batch_join:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "l2_normalize/Square"
  op: "Square"
  input: "train_input/shuffle_batch_join:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "l2_normalize/Sum"
  op: "Sum"
  input: "l2_normalize/Square"
  input: "l2_normalize/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize/Maximum"
  op: "Maximum"
  input: "l2_normalize/Sum"
  input: "l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize"
  op: "Mul"
  input: "train_input/shuffle_batch_join:3"
  input: "l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split"
  op: "Split"
  input: "split/split_dim"
  input: "l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 1
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "split_1/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split_1"
  op: "Split"
  input: "split_1/split_dim"
  input: "train_input/shuffle_batch_join"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 1
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "split_2/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split_2"
  op: "Split"
  input: "split_2/split_dim"
  input: "train_input/shuffle_batch_join:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 1
    }
  }
}
node {
  name: "tower/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "tower/ExpandDims"
  op: "ExpandDims"
  input: "split_2"
  input: "tower/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "tower/Cast"
  op: "Cast"
  input: "tower/ExpandDims"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "tower/Tile/multiples"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\200\004\000\000"
      }
    }
  }
}
node {
  name: "tower/Tile"
  op: "Tile"
  input: "tower/Cast"
  input: "tower/Tile/multiples"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "tower/Reshape/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\004\000\000"
      }
    }
  }
}
node {
  name: "tower/Reshape"
  op: "Reshape"
  input: "tower/Tile"
  input: "tower/Reshape/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "tower/Sum/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "tower/Sum"
  op: "Sum"
  input: "split"
  input: "tower/Sum/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/truediv"
  op: "RealDiv"
  input: "tower/Sum"
  input: "tower/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\004\000\000\026\017\000\000"
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03459262102842331
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03459262102842331
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "tower/fully_connected/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "tower/fully_connected/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "tower/fully_connected/weights/Initializer/random_uniform/max"
  input: "tower/fully_connected/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "tower/fully_connected/weights/Initializer/random_uniform/RandomUniform"
  input: "tower/fully_connected/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Initializer/random_uniform"
  op: "Add"
  input: "tower/fully_connected/weights/Initializer/random_uniform/mul"
  input: "tower/fully_connected/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1152
        }
        dim {
          size: 3862
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "tower/fully_connected/weights/Assign"
  op: "Assign"
  input: "tower/fully_connected/weights"
  input: "tower/fully_connected/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "tower/fully_connected/weights/read"
  op: "Identity"
  input: "tower/fully_connected/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "tower/fully_connected/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "tower/fully_connected/weights/read"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "tower/fully_connected/kernel/Regularizer/l2_regularizer/scale"
  input: "tower/fully_connected/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/biases/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3862
      }
    }
  }
}
node {
  name: "tower/fully_connected/biases/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tower/fully_connected/biases/Initializer/zeros"
  op: "Fill"
  input: "tower/fully_connected/biases/Initializer/zeros/shape_as_tensor"
  input: "tower/fully_connected/biases/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/fully_connected/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3862
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "tower/fully_connected/biases/Assign"
  op: "Assign"
  input: "tower/fully_connected/biases"
  input: "tower/fully_connected/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "tower/fully_connected/biases/read"
  op: "Identity"
  input: "tower/fully_connected/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/MatMul"
  op: "MatMul"
  input: "tower/truediv"
  input: "tower/fully_connected/weights/read"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "tower/fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "tower/fully_connected/MatMul"
  input: "tower/fully_connected/biases/read"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "tower/fully_connected/Sigmoid"
  op: "Sigmoid"
  input: "tower/fully_connected/BiasAdd"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/tower/fully_connected/weights/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "tower/tower/fully_connected/weights"
      }
    }
  }
}
node {
  name: "tower/tower/fully_connected/weights"
  op: "HistogramSummary"
  input: "tower/tower/fully_connected/weights/tag"
  input: "tower/fully_connected/weights/read"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/tower/fully_connected/biases/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "tower/tower/fully_connected/biases"
      }
    }
  }
}
node {
  name: "tower/tower/fully_connected/biases"
  op: "HistogramSummary"
  input: "tower/tower/fully_connected/biases/tag"
  input: "tower/fully_connected/biases/read"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/Cast"
  op: "Cast"
  input: "split_1"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/add/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "tower/loss_xent/add"
  op: "AddV2"
  input: "tower/fully_connected/Sigmoid"
  input: "tower/loss_xent/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/Log"
  op: "Log"
  input: "tower/loss_xent/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/mul"
  op: "Mul"
  input: "tower/loss_xent/Cast"
  input: "tower/loss_xent/Log"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/sub/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower/loss_xent/sub"
  op: "Sub"
  input: "tower/loss_xent/sub/x"
  input: "tower/loss_xent/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/sub_1/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower/loss_xent/sub_1"
  op: "Sub"
  input: "tower/loss_xent/sub_1/x"
  input: "tower/fully_connected/Sigmoid"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/add_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "tower/loss_xent/add_1"
  op: "AddV2"
  input: "tower/loss_xent/sub_1"
  input: "tower/loss_xent/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/Log_1"
  op: "Log"
  input: "tower/loss_xent/add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/mul_1"
  op: "Mul"
  input: "tower/loss_xent/sub"
  input: "tower/loss_xent/Log_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/add_2"
  op: "AddV2"
  input: "tower/loss_xent/mul"
  input: "tower/loss_xent/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/Neg"
  op: "Neg"
  input: "tower/loss_xent/add_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/Sum/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "tower/loss_xent/Sum"
  op: "Sum"
  input: "tower/loss_xent/Neg"
  input: "tower/loss_xent/Sum/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/loss_xent/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "tower/loss_xent/Mean"
  op: "Mean"
  input: "tower/loss_xent/Sum"
  input: "tower/loss_xent/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tower/add"
  op: "AddV2"
  input: "tower/Const"
  input: "tower/fully_connected/kernel/Regularizer/l2_regularizer"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/mul/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower/mul"
  op: "Mul"
  input: "tower/mul/x"
  input: "tower/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/add_1"
  op: "AddV2"
  input: "tower/mul"
  input: "tower/loss_xent/Mean"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/grad_ys_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower/gradients/Fill"
  op: "Fill"
  input: "tower/gradients/Shape"
  input: "tower/gradients/grad_ys_0"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/Fill"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/Fill"
  input: "^tower/gradients/tower/add_1_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/Fill"
  input: "^tower/gradients/tower/add_1_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/mul_grad/Mul"
  op: "Mul"
  input: "tower/gradients/tower/add_1_grad/tuple/control_dependency"
  input: "tower/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/mul_grad/Mul_1"
  op: "Mul"
  input: "tower/gradients/tower/add_1_grad/tuple/control_dependency"
  input: "tower/mul/x"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/mul_grad/Mul"
  input: "^tower/gradients/tower/mul_grad/Mul_1"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/mul_grad/Mul"
  input: "^tower/gradients/tower/mul_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/mul_grad/Mul_1"
  input: "^tower/gradients/tower/mul_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Reshape/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Reshape"
  op: "Reshape"
  input: "tower/gradients/tower/add_1_grad/tuple/control_dependency_1"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Reshape/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Shape"
  op: "Shape"
  input: "tower/loss_xent/Sum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Tile"
  op: "Tile"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Reshape"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Shape_1"
  op: "Shape"
  input: "tower/loss_xent/Sum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Prod"
  op: "Prod"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Shape_1"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Prod_1"
  op: "Prod"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Shape_2"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Maximum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Maximum"
  op: "Maximum"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Prod_1"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Maximum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Prod"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Cast"
  op: "Cast"
  input: "tower/gradients/tower/loss_xent/Mean_grad/floordiv"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/truediv"
  op: "RealDiv"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Tile"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/mul_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/mul_grad/tuple/control_dependency_1"
  input: "^tower/gradients/tower/add_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/mul_grad/tuple/control_dependency_1"
  input: "^tower/gradients/tower/add_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/Shape"
  op: "Shape"
  input: "tower/loss_xent/Neg"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/Size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/add"
  op: "AddV2"
  input: "tower/loss_xent/Sum/reduction_indices"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/mod"
  op: "FloorMod"
  input: "tower/gradients/tower/loss_xent/Sum_grad/add"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/range"
  op: "Range"
  input: "tower/gradients/tower/loss_xent/Sum_grad/range/start"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Size"
  input: "tower/gradients/tower/loss_xent/Sum_grad/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/Fill/value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/Fill"
  op: "Fill"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Shape_1"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Fill/value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "tower/gradients/tower/loss_xent/Sum_grad/range"
  input: "tower/gradients/tower/loss_xent/Sum_grad/mod"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Shape"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Fill"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/Maximum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/Maximum"
  op: "Maximum"
  input: "tower/gradients/tower/loss_xent/Sum_grad/DynamicStitch"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Maximum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Shape"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/Reshape"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/Mean_grad/truediv"
  input: "tower/gradients/tower/loss_xent/Sum_grad/DynamicStitch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/Tile"
  op: "Tile"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Reshape"
  input: "tower/gradients/tower/loss_xent/Sum_grad/floordiv"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "tower/gradients/tower/add_grad/tuple/control_dependency_1"
  input: "tower/fully_connected/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "tower/gradients/tower/add_grad/tuple/control_dependency_1"
  input: "tower/fully_connected/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Neg_grad/Neg"
  op: "Neg"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Tile"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "tower/fully_connected/weights/read"
  input: "tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_2_grad/Shape"
  op: "Shape"
  input: "tower/loss_xent/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_2_grad/Shape_1"
  op: "Shape"
  input: "tower/loss_xent/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "tower/gradients/tower/loss_xent/add_2_grad/Shape"
  input: "tower/gradients/tower/loss_xent/add_2_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_2_grad/Sum"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/Neg_grad/Neg"
  input: "tower/gradients/tower/loss_xent/add_2_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_2_grad/Reshape"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/add_2_grad/Sum"
  input: "tower/gradients/tower/loss_xent/add_2_grad/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_2_grad/Sum_1"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/Neg_grad/Neg"
  input: "tower/gradients/tower/loss_xent/add_2_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/add_2_grad/Sum_1"
  input: "tower/gradients/tower/loss_xent/add_2_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/loss_xent/add_2_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/add_2_grad/Reshape_1"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/loss_xent/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/add_2_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/add_2_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/add_2_grad/Reshape_1"
  input: "^tower/gradients/tower/loss_xent/add_2_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/add_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/Shape"
  op: "Shape"
  input: "tower/loss_xent/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/Shape_1"
  op: "Shape"
  input: "tower/loss_xent/Log"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "tower/gradients/tower/loss_xent/mul_grad/Shape"
  input: "tower/gradients/tower/loss_xent/mul_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/Mul"
  op: "Mul"
  input: "tower/gradients/tower/loss_xent/add_2_grad/tuple/control_dependency"
  input: "tower/loss_xent/Log"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/Sum"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/mul_grad/Mul"
  input: "tower/gradients/tower/loss_xent/mul_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/Reshape"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/mul_grad/Sum"
  input: "tower/gradients/tower/loss_xent/mul_grad/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/Mul_1"
  op: "Mul"
  input: "tower/loss_xent/Cast"
  input: "tower/gradients/tower/loss_xent/add_2_grad/tuple/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/Sum_1"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/mul_grad/Mul_1"
  input: "tower/gradients/tower/loss_xent/mul_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/Reshape_1"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/mul_grad/Sum_1"
  input: "tower/gradients/tower/loss_xent/mul_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/loss_xent/mul_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/mul_grad/Reshape_1"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/mul_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/mul_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/mul_grad/Reshape_1"
  input: "^tower/gradients/tower/loss_xent/mul_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/Shape"
  op: "Shape"
  input: "tower/loss_xent/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/Shape_1"
  op: "Shape"
  input: "tower/loss_xent/Log_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/Shape"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/Mul"
  op: "Mul"
  input: "tower/gradients/tower/loss_xent/add_2_grad/tuple/control_dependency_1"
  input: "tower/loss_xent/Log_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/Sum"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/Mul"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/Reshape"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/Sum"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/Mul_1"
  op: "Mul"
  input: "tower/loss_xent/sub"
  input: "tower/gradients/tower/loss_xent/add_2_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/Sum_1"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/Mul_1"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/Sum_1"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/loss_xent/mul_1_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/mul_1_grad/Reshape_1"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/mul_1_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/Reshape_1"
  input: "^tower/gradients/tower/loss_xent/mul_1_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "tower/loss_xent/add"
  input: "^tower/gradients/tower/loss_xent/mul_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Log_grad/mul"
  op: "Mul"
  input: "tower/gradients/tower/loss_xent/mul_grad/tuple/control_dependency_1"
  input: "tower/gradients/tower/loss_xent/Log_grad/Reciprocal"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Log_1_grad/Reciprocal"
  op: "Reciprocal"
  input: "tower/loss_xent/add_1"
  input: "^tower/gradients/tower/loss_xent/mul_1_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Log_1_grad/mul"
  op: "Mul"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/tuple/control_dependency_1"
  input: "tower/gradients/tower/loss_xent/Log_1_grad/Reciprocal"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_grad/Shape"
  op: "Shape"
  input: "tower/fully_connected/Sigmoid"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_grad/Shape_1"
  op: "Shape"
  input: "tower/loss_xent/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "tower/gradients/tower/loss_xent/add_grad/Shape"
  input: "tower/gradients/tower/loss_xent/add_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_grad/Sum"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/Log_grad/mul"
  input: "tower/gradients/tower/loss_xent/add_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_grad/Reshape"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/add_grad/Sum"
  input: "tower/gradients/tower/loss_xent/add_grad/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_grad/Sum_1"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/Log_grad/mul"
  input: "tower/gradients/tower/loss_xent/add_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_grad/Reshape_1"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/add_grad/Sum_1"
  input: "tower/gradients/tower/loss_xent/add_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/loss_xent/add_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/add_grad/Reshape_1"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/loss_xent/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/add_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/add_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/add_grad/Reshape_1"
  input: "^tower/gradients/tower/loss_xent/add_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_1_grad/Shape"
  op: "Shape"
  input: "tower/loss_xent/sub_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_1_grad/Shape_1"
  op: "Shape"
  input: "tower/loss_xent/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "tower/gradients/tower/loss_xent/add_1_grad/Shape"
  input: "tower/gradients/tower/loss_xent/add_1_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_1_grad/Sum"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/Log_1_grad/mul"
  input: "tower/gradients/tower/loss_xent/add_1_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_1_grad/Reshape"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/add_1_grad/Sum"
  input: "tower/gradients/tower/loss_xent/add_1_grad/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_1_grad/Sum_1"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/Log_1_grad/mul"
  input: "tower/gradients/tower/loss_xent/add_1_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/add_1_grad/Sum_1"
  input: "tower/gradients/tower/loss_xent/add_1_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/loss_xent/add_1_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/add_1_grad/Reshape_1"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/loss_xent/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/add_1_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/add_1_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/add_1_grad/Reshape_1"
  input: "^tower/gradients/tower/loss_xent/add_1_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/Shape"
  op: "Shape"
  input: "tower/loss_xent/sub_1/x"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/Shape_1"
  op: "Shape"
  input: "tower/fully_connected/Sigmoid"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/Shape"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/Sum"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/add_1_grad/tuple/control_dependency"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/Reshape"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/Sum"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/Neg"
  op: "Neg"
  input: "tower/gradients/tower/loss_xent/add_1_grad/tuple/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/Sum_1"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/Neg"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/Sum_1"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/loss_xent/sub_1_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/sub_1_grad/Reshape_1"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/sub_1_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/sub_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/Reshape_1"
  input: "^tower/gradients/tower/loss_xent/sub_1_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/sub_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/AddN"
  op: "AddN"
  input: "tower/gradients/tower/loss_xent/add_grad/tuple/control_dependency"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "tower/fully_connected/Sigmoid"
  input: "tower/gradients/AddN"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "tower/gradients/tower/fully_connected/Sigmoid_grad/SigmoidGrad"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/fully_connected/BiasAdd_grad/BiasAddGrad"
  input: "^tower/gradients/tower/fully_connected/Sigmoid_grad/SigmoidGrad"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/fully_connected/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/fully_connected/Sigmoid_grad/SigmoidGrad"
  input: "^tower/gradients/tower/fully_connected/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/fully_connected/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/fully_connected/BiasAdd_grad/BiasAddGrad"
  input: "^tower/gradients/tower/fully_connected/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "tower/gradients/tower/fully_connected/BiasAdd_grad/tuple/control_dependency"
  input: "tower/fully_connected/weights/read"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "tower/truediv"
  input: "tower/gradients/tower/fully_connected/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/fully_connected/MatMul_grad/MatMul"
  input: "^tower/gradients/tower/fully_connected/MatMul_grad/MatMul_1"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/fully_connected/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/fully_connected/MatMul_grad/MatMul"
  input: "^tower/gradients/tower/fully_connected/MatMul_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/fully_connected/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1152
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/fully_connected/MatMul_grad/MatMul_1"
  input: "^tower/gradients/tower/fully_connected/MatMul_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/AddN_1"
  op: "AddN"
  input: "tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "tower/gradients/tower/fully_connected/MatMul_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "stack"
  op: "Pack"
  input: "tower/loss_xent/Mean"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "stack"
  input: "Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "label_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "label_loss"
      }
    }
  }
}
node {
  name: "label_loss"
  op: "ScalarSummary"
  input: "label_loss/tags"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stack_1"
  op: "Pack"
  input: "tower/add"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_1"
  op: "Mean"
  input: "stack_1"
  input: "Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "reg_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "reg_loss"
      }
    }
  }
}
node {
  name: "reg_loss"
  op: "ScalarSummary"
  input: "reg_loss/tags"
  input: "Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stack_2"
  op: "Pack"
  input: "tower/gradients/AddN_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "stack_2"
  input: "Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "stack_3"
  op: "Pack"
  input: "tower/gradients/tower/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Sum_1"
  op: "Sum"
  input: "stack_3"
  input: "Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/mul"
  op: "Mul"
  input: "Sum"
  input: "Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/Sum"
  op: "Sum"
  input: "clip_grads/clip_by_norm/mul"
  input: "clip_grads/clip_by_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/Greater"
  op: "Greater"
  input: "clip_grads/clip_by_norm/Sum"
  input: "clip_grads/clip_by_norm/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/ones_like/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/ones_like"
  op: "Fill"
  input: "clip_grads/clip_by_norm/ones_like/Shape"
  input: "clip_grads/clip_by_norm/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/Select"
  op: "Select"
  input: "clip_grads/clip_by_norm/Greater"
  input: "clip_grads/clip_by_norm/Sum"
  input: "clip_grads/clip_by_norm/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/Sqrt"
  op: "Sqrt"
  input: "clip_grads/clip_by_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/Select_1"
  op: "Select"
  input: "clip_grads/clip_by_norm/Greater"
  input: "clip_grads/clip_by_norm/Sqrt"
  input: "clip_grads/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/mul_1"
  op: "Mul"
  input: "Sum"
  input: "clip_grads/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/Maximum"
  op: "Maximum"
  input: "clip_grads/clip_by_norm/Select_1"
  input: "clip_grads/clip_by_norm/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/truediv"
  op: "RealDiv"
  input: "clip_grads/clip_by_norm/mul_1"
  input: "clip_grads/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm"
  op: "Identity"
  input: "clip_grads/clip_by_norm/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/mul"
  op: "Mul"
  input: "Sum_1"
  input: "Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/Sum"
  op: "Sum"
  input: "clip_grads/clip_by_norm_1/mul"
  input: "clip_grads/clip_by_norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/Greater"
  op: "Greater"
  input: "clip_grads/clip_by_norm_1/Sum"
  input: "clip_grads/clip_by_norm_1/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/ones_like/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/ones_like"
  op: "Fill"
  input: "clip_grads/clip_by_norm_1/ones_like/Shape"
  input: "clip_grads/clip_by_norm_1/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/Select"
  op: "Select"
  input: "clip_grads/clip_by_norm_1/Greater"
  input: "clip_grads/clip_by_norm_1/Sum"
  input: "clip_grads/clip_by_norm_1/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/Sqrt"
  op: "Sqrt"
  input: "clip_grads/clip_by_norm_1/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/Select_1"
  op: "Select"
  input: "clip_grads/clip_by_norm_1/Greater"
  input: "clip_grads/clip_by_norm_1/Sqrt"
  input: "clip_grads/clip_by_norm_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/mul_1"
  op: "Mul"
  input: "Sum_1"
  input: "clip_grads/clip_by_norm_1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/Maximum"
  op: "Maximum"
  input: "clip_grads/clip_by_norm_1/Select_1"
  input: "clip_grads/clip_by_norm_1/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/truediv"
  op: "RealDiv"
  input: "clip_grads/clip_by_norm_1/mul_1"
  input: "clip_grads/clip_by_norm_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1"
  op: "Identity"
  input: "clip_grads/clip_by_norm_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\004\000\000\026\017\000\000"
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "tower/fully_connected/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "tower/fully_connected/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1152
        }
        dim {
          size: 3862
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "tower/fully_connected/weights/Adam"
  input: "tower/fully_connected/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam/read"
  op: "Identity"
  input: "tower/fully_connected/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\004\000\000\026\017\000\000"
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "tower/fully_connected/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "tower/fully_connected/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1152
        }
        dim {
          size: 3862
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "tower/fully_connected/weights/Adam_1"
  input: "tower/fully_connected/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "tower/fully_connected/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3862
      }
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam/Initializer/zeros"
  op: "Fill"
  input: "tower/fully_connected/biases/Adam/Initializer/zeros/shape_as_tensor"
  input: "tower/fully_connected/biases/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3862
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam/Assign"
  op: "Assign"
  input: "tower/fully_connected/biases/Adam"
  input: "tower/fully_connected/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam/read"
  op: "Identity"
  input: "tower/fully_connected/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3862
      }
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "tower/fully_connected/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "tower/fully_connected/biases/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3862
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam_1/Assign"
  op: "Assign"
  input: "tower/fully_connected/biases/Adam_1"
  input: "tower/fully_connected/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam_1/read"
  op: "Identity"
  input: "tower/fully_connected/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_tower/fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "tower/fully_connected/weights"
  input: "tower/fully_connected/weights/Adam"
  input: "tower/fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_grads/clip_by_norm"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_tower/fully_connected/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "tower/fully_connected/biases"
  input: "tower/fully_connected/biases/Adam"
  input: "tower/fully_connected/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_grads/clip_by_norm_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_tower/fully_connected/biases/ApplyAdam"
  input: "^Adam/update_tower/fully_connected/weights/ApplyAdam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_tower/fully_connected/biases/ApplyAdam"
  input: "^Adam/update_tower/fully_connected/weights/ApplyAdam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update"
  op: "NoOp"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
  input: "^Adam/update_tower/fully_connected/biases/ApplyAdam"
  input: "^Adam/update_tower/fully_connected/weights/ApplyAdam"
  device: "/device:CPU:0"
}
node {
  name: "Adam/value"
  op: "Const"
  input: "^Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat/concat"
  op: "Identity"
  input: "tower/fully_connected/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "train_input/shuffle_batch_join"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 9
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "global_step"
        string_val: "tower/fully_connected/biases"
        string_val: "tower/fully_connected/biases/Adam"
        string_val: "tower/fully_connected/biases/Adam_1"
        string_val: "tower/fully_connected/weights"
        string_val: "tower/fully_connected/weights/Adam"
        string_val: "tower/fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 9
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "global_step"
  input: "tower/fully_connected/biases"
  input: "tower/fully_connected/biases/Adam"
  input: "tower/fully_connected/biases/Adam_1"
  input: "tower/fully_connected/weights"
  input: "tower/fully_connected/weights/Adam"
  input: "tower/fully_connected/weights/Adam_1"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 9
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "global_step"
        string_val: "tower/fully_connected/biases"
        string_val: "tower/fully_connected/biases/Adam"
        string_val: "tower/fully_connected/biases/Adam_1"
        string_val: "tower/fully_connected/weights"
        string_val: "tower/fully_connected/weights/Adam"
        string_val: "tower/fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 9
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "tower/fully_connected/biases"
  input: "save/RestoreV2:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "tower/fully_connected/biases/Adam"
  input: "save/RestoreV2:4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "tower/fully_connected/biases/Adam_1"
  input: "save/RestoreV2:5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "tower/fully_connected/weights"
  input: "save/RestoreV2:6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "tower/fully_connected/weights/Adam"
  input: "save/RestoreV2:7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "tower/fully_connected/weights/Adam_1"
  input: "save/RestoreV2:8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1152
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all/NoOp"
  op: "NoOp"
  input: "^save/Assign_2"
}
node {
  name: "save/restore_all/NoOp_1"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  device: "/device:CPU:0"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_all/NoOp"
  input: "^save/restore_all/NoOp_1"
}
node {
  name: "init/NoOp"
  op: "NoOp"
  input: "^global_step/Assign"
}
node {
  name: "init/NoOp_1"
  op: "NoOp"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^tower/fully_connected/biases/Adam/Assign"
  input: "^tower/fully_connected/biases/Adam_1/Assign"
  input: "^tower/fully_connected/biases/Assign"
  input: "^tower/fully_connected/weights/Adam/Assign"
  input: "^tower/fully_connected/weights/Adam_1/Assign"
  input: "^tower/fully_connected/weights/Assign"
  device: "/device:CPU:0"
}
node {
  name: "init"
  op: "NoOp"
  input: "^init/NoOp"
  input: "^init/NoOp_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "tower/fully_connected/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "tower/fully_connected/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "beta1_power"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "beta2_power"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "tower/fully_connected/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "tower/fully_connected/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "tower/fully_connected/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "tower/fully_connected/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "train_input/input_producer/limit_epochs/epochs"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/input_producer/limit_epochs/epochs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 10
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 10
          }
        }
        string_val: "global_step"
        string_val: "tower/fully_connected/weights"
        string_val: "tower/fully_connected/biases"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "tower/fully_connected/weights/Adam"
        string_val: "tower/fully_connected/weights/Adam_1"
        string_val: "tower/fully_connected/biases/Adam"
        string_val: "tower/fully_connected/biases/Adam_1"
        string_val: "train_input/input_producer/limit_epochs/epochs"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^train_input/input_producer/limit_epochs/epochs/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "learning_rate"
  input: "train_input/input_producer/fraction_of_32_full"
  input: "train_input/shuffle_batch_join/fraction_over_1024_of_4096_full"
  input: "model/input_raw"
  input: "tower/tower/fully_connected/weights"
  input: "tower/tower/fully_connected/biases"
  input: "label_loss"
  input: "reg_loss"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
versions {
  producer: 134
}
